syntax = "proto3";
package xibc.core.packet.v1;

option go_package = "github.com/teleport-network/teleport/x/xibc/core/packet/types";

import "gogoproto/gogo.proto";
import "xibc/core/client/v1/client.proto";
import "xibc/core/packet/v1/packet.proto";

// Msg defines the xibc/packet Msg service.
service Msg {
  // RecvPacket defines a rpc handler method for MsgRecvPacket.
  rpc RecvPacket(MsgRecvPacket) returns (MsgRecvPacketResponse);

  // Acknowledgement defines a rpc handler method for MsgAcknowledgement.
  rpc Acknowledgement(MsgAcknowledgement) returns (MsgAcknowledgementResponse);
}

// MsgRecvPacket receives incoming XIBC packet
message MsgRecvPacket {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  bytes packet = 1 [ (gogoproto.nullable) = false ];
  bytes proof_commitment = 2
      [ (gogoproto.moretags) = "yaml:\"proof_commitment\"" ];
  xibc.core.client.v1.Height proof_height = 3 [
    (gogoproto.moretags) = "yaml:\"proof_height\"",
    (gogoproto.nullable) = false
  ];
  string signer = 4;
}

// MsgRecvPacketResponse defines the Msg/RecvPacket response type.
message MsgRecvPacketResponse {}

// MsgAcknowledgement receives incoming XIBC acknowledgement
message MsgAcknowledgement {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  bytes packet = 1 [ (gogoproto.nullable) = false ];
  bytes acknowledgement = 2;
  bytes proof_acked = 3 [ (gogoproto.moretags) = "yaml:\"proof_acked\"" ];
  xibc.core.client.v1.Height proof_height = 4 [
    (gogoproto.moretags) = "yaml:\"proof_height\"",
    (gogoproto.nullable) = false
  ];
  string signer = 5;
}

// MsgAcknowledgementResponse defines the Msg/Acknowledgement response type.
message MsgAcknowledgementResponse {}
