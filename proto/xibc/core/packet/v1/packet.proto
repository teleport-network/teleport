syntax = "proto3";
package xibc.core.packet.v1;

option go_package = "github.com/teleport-network/teleport/x/xibc/core/packet/types";

import "gogoproto/gogo.proto";

// Packet defines a type that carries data across different chains through XIBC
message Packet {
  option (gogoproto.goproto_getters) = false;

  // number corresponds to the order of sends and receives, where a Packet
  // with an earlier sequence number must be sent and received before a Packet
  // with a later sequence number.
  uint64 sequence = 1;
  // identifies the chain id of the sending chain.
  string source_chain = 2 [ (gogoproto.moretags) = "yaml:\"source_chain\"" ];
  // identifies the chain id of the receiving chain.
  string destination_chain = 3
      [ (gogoproto.moretags) = "yaml:\"destination_port\"" ];
  // identifies the chain id of the relay chain.
  string relay_chain = 4 [ (gogoproto.moretags) = "yaml:\"relay_chain\"" ];
  // identifies the ports on the sending chain and destination chain
  repeated string ports = 5;
  // actual opaque bytes transferred directly to the application module
  repeated bytes data_list = 6;
}

// PacketState defines the generic type necessary to retrieve and store
// packet commitments, acknowledgements, and receipts.
// Caller is responsible for knowing the context necessary to interpret this
// state as a commitment, acknowledgement, or a receipt.
message PacketState {
  option (gogoproto.goproto_getters) = false;

  // the sending chain identifier.
  string source_chain = 1 [ (gogoproto.moretags) = "yaml:\"source_chain\"" ];
  // the receiving chain identifier.
  string destination_chain = 2
      [ (gogoproto.moretags) = "yaml:\"source_chain\"" ];
  // packet sequence.
  uint64 sequence = 3;
  // embedded data that represents packet state.
  bytes data = 4;
}

// Acknowledgement is the recommended acknowledgement format to be used by
// app-specific protocols.
message Acknowledgement {
  // the execution results of the packet data list
  repeated bytes results = 1;
  // error message
  string message = 2;
}
